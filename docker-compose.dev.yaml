version: '3.8'

services:
  mongo:
    image: mongo:4.0-xenial
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/dbs
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    command: mongod

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-mysql:4.2
    depends_on:
      - sql
    ports:
      - 3567:3567
    environment:
      MYSQL_CONNECTION_URI: "mysql://${MYSQL_USERNAME}:${MYSQL_PASSWORD}@${MYSQL_HOST}:3306/${MYSQL_DATABASE}"
    networks:
      - supertokens-sql
    restart:
      unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  sql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    env_file:
      - ./backend/.env
    expose:
      - 3306
    networks:
      - supertokens-sql
    volumes:
      - sql-data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    restart: unless-stopped
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - ELASTIC_USERNAME=${ELASTICSEARCH_USERNAME}
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped
    ports:
      - 6333:6333
    environment:
      - QDRANT_API_PORT=6333
    volumes:
      - qdrant-data:/qdrant_data
    healthcheck:
      test: curl -s http://qdrant:6333/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mongo-data:
  sql-data:
  elasticsearch-data:
  qdrant-data:

networks:
  supertokens-sql: