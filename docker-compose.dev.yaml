version: '3.8'

services:
  web:
    build: ./web
    ports:
      - 3000:3000
    expose:
      - 3000
    restart: unless-stopped
    networks:
      - web-backend
    volumes:
      - ./web:/usr/src/
    command: yarn run dev
    depends_on:
      - backend
      - supertokens
  
  backend:
    build: ./backend
    ports:
      - 8000:8000
    expose:
      - 8000
    restart: unless-stopped
    networks:
      - web-backend
      - backend-mongo
      - backend-supertokens
      - backend-elasticsearch
    depends_on:
      - mongo
      - supertokens
      - elasticsearch
    volumes:
      - ./backend:/usr/src/
    command: yarn run dev
    environment:
      MONGO_URL: mongodb://mongo:27017
      SUPERTOKENS_URL: http://supertokens:3567
      WEBSITE_DOMAIN: http://127.0.0.1:3000
      API_DOMAIN: http://127.0.0.1:8000
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_USERNAME: elastic
  
  mongo:
    image: mongo:4.0-xenial
    restart: unless-stopped
    networks:
      - backend-mongo
    expose:
      - 27017
    volumes:
      - mongo-data:/data/db
    logging:
      driver: none

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-mysql:4.2
    depends_on:
      - sql
    expose:
      - 3567
    environment:
      MYSQL_CONNECTION_URI: mysql://supertokens_user:somePassword@sql:3306/supertokens
    networks:
      - supertokens-sql
      - backend-supertokens
    restart:
      unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: none

  sql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: supertokens_user
      MYSQL_PASSWORD: somePassword 
      MYSQL_DATABASE: supertokens
    expose:
      - 3306
    networks:
      - supertokens-sql
    volumes:
      - sql-data:/var/lib/mysql
    restart:
      unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    logging:
      driver: none

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    restart: unless-stopped
    expose:
      - 9200
    networks:
      - backend-elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=changeme
      - ELASTIC_USERNAME=elastic
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    # logging:
    #   driver: none

volumes:
  mongo-data:
  sql-data:
  elasticsearch-data:

networks:
  web-backend:
  backend-mongo:
  backend-supertokens:
  supertokens-sql:
  backend-elasticsearch:
