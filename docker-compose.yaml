version: '3.8'

services:
  web:
    build: ./web
    ports:
      - 3000:3000
    expose:
      - 3000
    restart: unless-stopped
    networks:
      - web-backend
    volumes:
      - ./config/client.env:/usr/src/src/.env.local
    depends_on:
      - backend
      - supertokens
  
  backend:
    build: ./backend
    ports:
      - 8000:8000
    expose:
      - 8000
    restart: unless-stopped
    networks:
      - web-backend
      - backend-mongo
      - backend-supertokens
      - backend-elasticsearch
    depends_on:
      - mongo
      - supertokens
      - elasticsearch
    environment:
      MONGO_URL: ${MONGO_URL}
      SUPERTOKENS_URL: ${SUPERTOKENS_URL}
      WEBSITE_DOMAIN: ${WEBSITE_DOMAIN}
      API_DOMAIN: ${API_DOMAIN}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD}
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      MILVUS_URL: ${MILVUS_URL}
  
  mongo:
    image: mongo:4.0-xenial
    restart: unless-stopped
    networks:
      - backend-mongo
    expose:
      - 27017
    volumes:
      - mongo-data:/data/db
    logging:
      driver: none

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-mysql:4.2
    depends_on:
      - sql
    expose:
      - 3567
    environment:
      MYSQL_CONNECTION_URI: "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}:3306/${MYSQL_DATABASE}"
    networks:
      - supertokens-sql
      - backend-supertokens
    restart:
      unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: none

  sql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    expose:
      - 3306
    networks:
      - supertokens-sql
    volumes:
      - sql-data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    logging:
      driver: none

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    restart: unless-stopped
    expose:
      - 9200
    networks:
      - backend-elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - ELASTIC_USERNAME=${ELASTICSEARCH_USERNAME}
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: none

  milvus-standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.2.6
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    networks:
      - backend-milvus
      - milvus-minio
      - milvus-etcd
    volumes:
      - milvus-data:/var/lib/milvus
    expose:
      - 19530
      - 9091
    depends_on:
      - etcd
      - minio
    logging:
      driver: none

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    networks:
      - milvus-minio
    volumes:
      - etcd-data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    expose:
      - 2379
    logging:
      driver: none

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    networks:
      - milvus-minio
    volumes:
      - minio-data:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    expose:
      - 9000
    logging:
      driver: none


volumes:
  mongo-data:
  sql-data:
  elasticsearch-data:
  etcd-data:
  minio-data:
  milvus-data:

networks:
  web-backend:
  backend-mongo:
  backend-supertokens:
  backend-elasticsearch:
  backend-milvus:
  supertokens-sql:
  milvus-minio:
  milvus-etcd:
